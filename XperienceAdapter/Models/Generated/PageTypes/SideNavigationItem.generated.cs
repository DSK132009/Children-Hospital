//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.UMCHospital;

[assembly: RegisterDocumentType(SideNavigationItem.CLASS_NAME, typeof(SideNavigationItem))]

namespace CMS.DocumentEngine.Types.UMCHospital
{
	/// <summary>
	/// Represents a content item of type SideNavigationItem.
	/// </summary>
	public partial class SideNavigationItem : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "UMCHospital.SideNavigationItem";


		/// <summary>
		/// The instance of the class that provides extended API for working with SideNavigationItem fields.
		/// </summary>
		private readonly SideNavigationItemFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// SideNavigationItemID.
		/// </summary>
		[DatabaseIDField]
		public int SideNavigationItemID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("SideNavigationItemID"), 0);
			}
			set
			{
				SetValue("SideNavigationItemID", value);
			}
		}


		/// <summary>
		/// Display Name.
		/// </summary>
		[DatabaseField]
		public string DisplayName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("DisplayName"), @"");
			}
			set
			{
				SetValue("DisplayName", value);
			}
		}


		/// <summary>
		/// Link.
		/// </summary>
		[DatabaseField]
		public string Link
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Link"), @"");
			}
			set
			{
				SetValue("Link", value);
			}
		}


		/// <summary>
		/// Open in New Tab.
		/// </summary>
		[DatabaseField]
		public bool OpenInNewTab
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("OpenInNewTab"), false);
			}
			set
			{
				SetValue("OpenInNewTab", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with SideNavigationItem fields.
		/// </summary>
		[RegisterProperty]
		public SideNavigationItemFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with SideNavigationItem fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class SideNavigationItemFields : AbstractHierarchicalObject<SideNavigationItemFields>
		{
			/// <summary>
			/// The content item of type SideNavigationItem that is a target of the extended API.
			/// </summary>
			private readonly SideNavigationItem mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="SideNavigationItemFields" /> class with the specified content item of type SideNavigationItem.
			/// </summary>
			/// <param name="instance">The content item of type SideNavigationItem that is a target of the extended API.</param>
			public SideNavigationItemFields(SideNavigationItem instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// SideNavigationItemID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.SideNavigationItemID;
				}
				set
				{
					mInstance.SideNavigationItemID = value;
				}
			}


			/// <summary>
			/// Display Name.
			/// </summary>
			public string DisplayName
			{
				get
				{
					return mInstance.DisplayName;
				}
				set
				{
					mInstance.DisplayName = value;
				}
			}


			/// <summary>
			/// Link.
			/// </summary>
			public string Link
			{
				get
				{
					return mInstance.Link;
				}
				set
				{
					mInstance.Link = value;
				}
			}


			/// <summary>
			/// Open in New Tab.
			/// </summary>
			public bool OpenInNewTab
			{
				get
				{
					return mInstance.OpenInNewTab;
				}
				set
				{
					mInstance.OpenInNewTab = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="SideNavigationItem" /> class.
		/// </summary>
		public SideNavigationItem() : base(CLASS_NAME)
		{
			mFields = new SideNavigationItemFields(this);
		}

		#endregion
	}
}