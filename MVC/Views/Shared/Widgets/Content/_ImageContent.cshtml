@model ComponentViewModel<MVC.Models.Widgets.Content.ImageContent.ImageContentProperties>

@inject XperienceAdapter.Repositories.IMediaFileRepository MediaFileRespository

@{
    var image = "";

    if ((Model?.Properties?.Image?.FirstOrDefault()?.FileGuid ?? Guid.Empty) != Guid.Empty)
    {
        var imageFile = await MediaFileRespository.GetMediaFileAsync(Model.Properties.Image.FirstOrDefault().FileGuid);

        if (imageFile != null)
        {
            image = imageFile.MediaFileUrl.RelativePath.Replace("~/", "/");
        }
    }
}

<article class="oot-card" aria-label="Image Content Card">
    <img class="" data-src="@image" alt="@Model.Properties.ImageAltText" data-srcset="@image" src="@image" srcset="@image">
    <div class="card-content">
        <h6>@Model.Properties.Heading</h6>        
        @if (Context.Kentico().PageBuilder().EditMode)
        {
            <div style="border: solid; box-sizing: border-box; padding: 10px; border-color: black; padding-bottom: 20px;">
                @{ Html.Kentico().RichTextEditor(nameof(Model.Properties.Content)); }
            </div>
        }
        else
        {
            <div class="fr-view">
                @Html.Raw(Html.Kentico().ResolveRichText(Model.Properties.Content))
            </div>
        }
    </div>
</article>
